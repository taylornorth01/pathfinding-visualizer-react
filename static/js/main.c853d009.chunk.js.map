{"version":3,"sources":["common/AppUtility.ts","common/GridUtility.ts","algorithm/Astar.ts","algorithm/Dijkstra.ts","algorithm/DepthFS.ts","algorithm/RecursiveDivision.ts","algorithm/RandomMaze.ts","common/AlgorithmUtility.ts","component/Grid.tsx","icon/ListIcon.tsx","component/Dropdown.tsx","component/Option.tsx","component/Button.tsx","component/List.tsx","component/Column.tsx","component/Item.tsx","component/Radio.tsx","component/BigButton.tsx","component/Modal.tsx","modal-page/TutorialPages.ts","App.tsx","common/MazeUtility.ts","index.tsx"],"names":["getSpeed","id","rate","Error","createGrid","h","w","grid","y","row","x","push","pos","type","placeFlag","flag","clearPath","map","node","state","undefined","mapNodesStateToGrid","nodes","clearWalls","getNodeSize","window","innerWidth","getViewportSize","Astar","start","goal","current","closed","flags","open","result","sort","a","b","gScore","fScore","shift","squares","makePath","adjSquares","forEach","sq","newG","heur","prev","includes","step","path","modified","adjSq","gr","from","to","ny","Math","abs","shortPath","prevSq","newSq","unshift","createGridMap","mp","length","rw","n","Infinity","this","st","go","Dijkstra","dist","localOpen","DepthFS","adj","l","i","shouldContinue","every","noRemainingSquares","filter","RecursiveDivision","minY","minX","maxY","maxX","boundingWalls","sqs","addInnerWalls","orientation","floor","randomNumber","addHorWall","addVerWall","gate","min","max","random","RandomMaze","getAlgorithmObject","name","get","updateAlgorithm","algorithm","wasSearch","Grid","mouseDown","mouseEnter","getNodeClass","getStyles","size","width","height","rowIdx","className","nodeIdx","onMouseDown","onMouseEnter","style","ListIcon","xmlns","fill","viewBox","fill-rule","d","Dropdown","title","children","useState","setOpen","onBlur","tabIndex","Option","text","onClick","active","e","Button","List","Column","Item","keyCol","Radio","BigButton","portal","document","getElementById","ModalReducer","action","Modal","modalPages","useReducer","page","dispatch","close","setClose","ReactDOM","createPortal","TutorialPages","_","require","init","initial","reducer","dState","cloneDeep","isDragging","placeType","payload","overided","override","console","log","minipulateNodes","isSearching","speed","maze","getMazeObject","updateMaze","App","gridRef","useRef","useEffect","ref","widthInNodes","clientWidth","heightInNodes","clientHeight","getAvaliableGridSpace","startAlgorithm","Promise","res","setTimeout","mouseUp","removeEventListener","addEventListener","render","StrictMode"],"mappings":"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","file":"static/js/main.c853d009.chunk.js","sourcesContent":["//\r\nimport { AppState, GridNode, Speed, SpeedId } from '../model';\r\n\r\nexport const minipulateNodes = (state: AppState, node: GridNode): AppState => {\r\n\tswitch (state.placeType) {\r\n\t\tcase 'empty':\r\n\t\t\tif (node.type !== 'start' && node.type !== 'goal') {\r\n\t\t\t\tstate.grid[node.pos.y][node.pos.x].type = 'wall';\r\n\t\t\t\treturn state;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase 'wall':\r\n\t\t\tif (node.type !== 'start' && node.type !== 'goal') {\r\n\t\t\t\tstate.grid[node.pos.y][node.pos.x].type = 'empty';\r\n\t\t\t\treturn state;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase 'start':\r\n\t\t\tif (node.type !== 'goal') {\r\n\t\t\t\tif (state.start.y !== node.pos.y || state.start.x !== node.pos.x) {\r\n\t\t\t\t\tstate.grid[node.pos.y][node.pos.x].type = 'start';\r\n\t\t\t\t\tif (node.type === 'wall' || node.type === 'empty') {\r\n\t\t\t\t\t\tstate.grid[node.pos.y][node.pos.x].overided = node.type;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstate.grid[state.start.y][state.start.x].type = 'empty';\r\n\t\t\t\t\tlet override = state.grid[state.start.y][state.start.x].overided;\r\n\t\t\t\t\tif (override) {\r\n\t\t\t\t\t\tstate.grid[state.start.y][state.start.x].type = override;\r\n\t\t\t\t\t\tdelete state.grid[state.start.y][state.start.x].overided;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstate.start = node.pos;\r\n\t\t\t\t\treturn state;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase 'goal':\r\n\t\t\tif (node.type !== 'start') {\r\n\t\t\t\tconsole.log(node);\r\n\t\t\t\tif (state.goal.y !== node.pos.y || state.goal.x !== node.pos.x) {\r\n\t\t\t\t\tstate.grid[node.pos.y][node.pos.x].type = 'goal';\r\n\t\t\t\t\tif (node.type === 'wall' || node.type === 'empty') {\r\n\t\t\t\t\t\tstate.grid[node.pos.y][node.pos.x].overided = node.type;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstate.grid[state.goal.y][state.goal.x].type = 'empty';\r\n\t\t\t\t\tlet override = state.grid[state.goal.y][state.goal.x].overided;\r\n\t\t\t\t\tif (override) {\r\n\t\t\t\t\t\tstate.grid[state.goal.y][state.goal.x].type = override;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstate.goal = node.pos;\r\n\t\t\t\t\treturn state;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t}\r\n\treturn state;\r\n};\r\n\r\nexport const getSpeed = ({ id }: SpeedId): Speed => {\r\n\tswitch (id) {\r\n\t\tcase 'slow':\r\n\t\t\treturn { id: 'slow', rate: 100 };\r\n\t\tcase 'medium':\r\n\t\t\treturn { id: 'medium', rate: 50 };\r\n\t\tcase 'fast':\r\n\t\t\treturn { id: 'fast', rate: 1 };\r\n\t\tdefault:\r\n\t\t\tthrow new Error('Speed not found');\r\n\t}\r\n};\r\n\r\nexport const getViewportSize = () => {\r\n\tlet w = window.innerWidth;\r\n\tif (w < 700) {\r\n\t\treturn 'mobile';\r\n\t} else if (w < 1100) {\r\n\t\treturn 'tablet';\r\n\t} else {\r\n\t\treturn 'desktop';\r\n\t}\r\n};\r\n","//\r\nimport { GridObject, GridNode, FlagType, Position } from '../model';\r\nimport { getViewportSize } from './AppUtility';\r\n\r\nexport const createGrid = (h: number, w: number): GridObject => {\r\n\tlet grid: GridNode[][] = [];\r\n\tfor (let y = 0; y < h; y++) {\r\n\t\tlet row: GridNode[] = [];\r\n\t\tfor (let x = 0; x < w; x++) {\r\n\t\t\trow.push({ pos: { x, y }, type: 'empty' });\r\n\t\t}\r\n\t\tgrid.push(row);\r\n\t}\r\n\treturn grid;\r\n};\r\n\r\nexport const placeFlag = (\r\n\tflag: FlagType,\r\n\tpos: Position,\r\n\tgrid: GridObject\r\n): GridObject => {\r\n\tgrid[pos.y][pos.x].type = flag;\r\n\treturn grid;\r\n};\r\n\r\nexport const clearPath = (grid: GridObject): GridObject => {\r\n\treturn grid.map((row) => {\r\n\t\treturn row.map((node) => {\r\n\t\t\treturn { ...node, state: undefined };\r\n\t\t});\r\n\t});\r\n};\r\n\r\nexport const mapNodesStateToGrid = (\r\n\tnodes: GridNode[],\r\n\tgrid: GridObject\r\n): GridObject => {\r\n\tnodes.map((node) => (grid[node.pos.y][node.pos.x].state = node.state));\r\n\treturn grid;\r\n};\r\n\r\nexport const clearWalls = (grid: GridObject): GridObject => {\r\n\treturn grid.map((row) => {\r\n\t\treturn row.map((node) => {\r\n\t\t\tif (node.type === 'wall') {\r\n\t\t\t\tnode.type = 'empty';\r\n\t\t\t\treturn node;\r\n\t\t\t}\r\n\t\t\treturn node;\r\n\t\t});\r\n\t});\r\n};\r\n\r\nexport const getNodeSize = () => {\r\n\tlet viewport = getViewportSize();\r\n\tswitch (viewport) {\r\n\t\tcase 'mobile':\r\n\t\t\treturn 15;\r\n\t\tcase 'tablet':\r\n\t\t\treturn 20;\r\n\t\tcase 'desktop':\r\n\t\t\treturn 25;\r\n\t\tdefault:\r\n\t\t\tthrow new Error('Viewport size not found');\r\n\t}\r\n};\r\n\r\nexport const getAvaliableGridSpace = (ref: HTMLDivElement | null) => {\r\n\tif (!ref) return [];\r\n\tlet size = getNodeSize() + 1;\r\n\tlet widthInNodes = Math.floor((ref.clientWidth - 40) / size);\r\n\tlet heightInNodes = Math.floor((ref.clientHeight - 60) / size);\r\n\tif (widthInNodes % 2 === 0) widthInNodes -= 1;\r\n\tif (heightInNodes % 2 === 0) heightInNodes -= 1;\r\n\treturn [widthInNodes, heightInNodes];\r\n};\r\n","//\r\nimport { GridNode, GridObject, Position } from '../model';\r\n\r\ninterface AstarNode extends GridNode {\r\n\tgScore: number;\r\n\tfScore: number;\r\n\tprev?: Position;\r\n}\r\n\r\nexport class Astar {\r\n\tstart: AstarNode;\r\n\tgoal: AstarNode;\r\n\tgrid: AstarNode[][];\r\n\tcurrent: AstarNode | undefined;\r\n\tclosed: AstarNode[];\r\n\tflags: { st: Position; go: Position };\r\n\topen: AstarNode[];\r\n\r\n\tconstructor(grid: GridObject, start: Position, goal: Position) {\r\n\t\tthis.closed = [];\r\n\t\tthis.open = [];\r\n\t\tthis.flags = { st: start, go: goal };\r\n\t\tthis.grid = this.createGridMap(grid);\r\n\t\tthis.start = {\r\n\t\t\t...grid[start.y][start.x],\r\n\t\t\tgScore: 0,\r\n\t\t\tfScore: Infinity,\r\n\t\t};\r\n\t\tthis.goal = {\r\n\t\t\t...grid[goal.y][goal.x],\r\n\t\t\tgScore: Infinity,\r\n\t\t\tfScore: Infinity,\r\n\t\t};\r\n\t\tthis.start.fScore = this.heur(this.start, this.goal);\r\n\t\tthis.open = [this.start];\r\n\t}\r\n\r\n\tresult = (): { squares: AstarNode[] } => {\r\n\t\twhile (this.open) {\r\n\t\t\tthis.open = this.open.sort((a, b) => {\r\n\t\t\t\treturn b.gScore - a.gScore;\r\n\t\t\t});\r\n\t\t\tthis.open = this.open.sort((a, b) => {\r\n\t\t\t\treturn a.fScore - b.fScore;\r\n\t\t\t});\r\n\r\n\t\t\tthis.current = this.open.shift();\r\n\t\t\tif (!this.current) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tsquares: this.closed,\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tthis.current.state = 'closed';\r\n\t\t\tthis.closed.push(this.current);\r\n\r\n\t\t\tif (this.current.type === 'goal') {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tsquares: [...this.closed, ...this.open, ...this.makePath()],\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tlet adj = this.adjSquares();\r\n\t\t\tadj.forEach((sq) => {\r\n\t\t\t\tif (sq.type === 'start') return;\r\n\t\t\t\tif (sq.type === 'wall') return;\r\n\t\t\t\tif (!this.current) return;\r\n\t\t\t\tlet newG = this.current.gScore + this.heur(sq, this.current);\r\n\t\t\t\tif (newG < sq.gScore) {\r\n\t\t\t\t\tsq.prev = this.current.pos;\r\n\t\t\t\t\tsq.gScore = newG;\r\n\t\t\t\t\tsq.fScore = sq.gScore + this.heur(sq, this.goal);\r\n\t\t\t\t\tif (!this.open.includes(sq)) {\r\n\t\t\t\t\t\tsq.state = 'open';\r\n\t\t\t\t\t\tthis.open.push(sq);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tsquares: this.closed,\r\n\t\t};\r\n\t};\r\n\r\n\tstep = (): {\r\n\t\tpath?: AstarNode[];\r\n\t\tmodified?: AstarNode[];\r\n\t} => {\r\n\t\tthis.open = this.open.sort((a, b) => {\r\n\t\t\treturn b.gScore - a.gScore;\r\n\t\t});\r\n\t\tthis.open = this.open.sort((a, b) => {\r\n\t\t\treturn a.fScore - b.fScore;\r\n\t\t});\r\n\r\n\t\tthis.current = this.open.shift();\r\n\t\tif (!this.current) {\r\n\t\t\treturn {\r\n\t\t\t\tpath: [],\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tthis.current.state = 'closed';\r\n\t\tthis.closed.push(this.current);\r\n\r\n\t\tif (this.current.type === 'goal') {\r\n\t\t\treturn {\r\n\t\t\t\tpath: this.makePath(),\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tlet adj = this.adjSquares();\r\n\t\tadj.forEach((sq) => {\r\n\t\t\tif (sq.type === 'start') return;\r\n\t\t\tif (sq.type === 'wall') return;\r\n\t\t\tif (!this.current) return;\r\n\t\t\tlet newG = this.current.gScore + this.heur(sq, this.current);\r\n\t\t\tif (newG < sq.gScore) {\r\n\t\t\t\tsq.prev = this.current.pos;\r\n\t\t\t\tsq.gScore = newG;\r\n\t\t\t\tsq.fScore = sq.gScore + this.heur(sq, this.goal);\r\n\t\t\t\tif (!this.open.includes(sq)) {\r\n\t\t\t\t\tsq.state = 'open';\r\n\t\t\t\t\tthis.open.push(sq);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn { modified: [this.current, ...this.open] };\r\n\t};\r\n\r\n\tadjSquares = (): AstarNode[] => {\r\n\t\tlet adjSq: AstarNode[] = [];\r\n\t\tlet gr = this.grid;\r\n\t\tlet sq = this.current;\r\n\t\tif (!sq) return adjSq;\r\n\t\tif (gr[sq.pos.y][sq.pos.x - 1]) adjSq.push(gr[sq.pos.y][sq.pos.x - 1]);\r\n\t\tif (gr[sq.pos.y][sq.pos.x + 1]) adjSq.push(gr[sq.pos.y][sq.pos.x + 1]);\r\n\t\tif (gr[sq.pos.y - 1]) adjSq.push(gr[sq.pos.y - 1][sq.pos.x]);\r\n\t\tif (gr[sq.pos.y + 1]) adjSq.push(gr[sq.pos.y + 1][sq.pos.x]);\r\n\t\treturn adjSq;\r\n\t};\r\n\r\n\theur = (from: AstarNode, to: AstarNode): number => {\r\n\t\tlet ny = Math.abs(from.pos.y - to.pos.y);\r\n\t\tlet nx = Math.abs(from.pos.x - to.pos.x);\r\n\t\treturn nx + ny;\r\n\t};\r\n\r\n\tmakePath = (): AstarNode[] => {\r\n\t\tif (!this.current) return [];\r\n\t\tlet shortPath: AstarNode[] = [];\r\n\t\tlet prevSq: AstarNode = this.current;\r\n\t\twhile (prevSq.prev) {\r\n\t\t\tlet newSq = { ...this.grid[prevSq.prev.y][prevSq.prev.x] };\r\n\t\t\tnewSq.state = 'path';\r\n\t\t\tshortPath.unshift(newSq);\r\n\t\t\tprevSq = newSq;\r\n\t\t}\r\n\t\tprevSq.state = 'path';\r\n\t\tshortPath.unshift(prevSq);\r\n\t\treturn shortPath;\r\n\t};\r\n\r\n\tcreateGridMap = (gr: GridObject): AstarNode[][] => {\r\n\t\tlet mp: AstarNode[][] = [];\r\n\t\tlet h = gr.length;\r\n\t\tlet w = gr[0].length;\r\n\t\tfor (let y = 0; y < h; y++) {\r\n\t\t\tlet rw: AstarNode[] = [];\r\n\t\t\tfor (let x = 0; x < w; x++) {\r\n\t\t\t\tlet n: AstarNode = {\r\n\t\t\t\t\t...gr[y][x],\r\n\t\t\t\t\tgScore: Infinity,\r\n\t\t\t\t\tfScore: Infinity,\r\n\t\t\t\t};\r\n\t\t\t\trw.push(n);\r\n\t\t\t}\r\n\t\t\tmp.push(rw);\r\n\t\t}\r\n\t\treturn mp;\r\n\t};\r\n}\r\n","//\r\nimport { GridNode, GridObject, Position } from '../model';\r\n\r\ninterface DijkstraNode extends GridNode {\r\n\tprev?: Position;\r\n\tdist: number;\r\n}\r\n\r\nexport class Dijkstra {\r\n\tstart: DijkstraNode;\r\n\tgoal: DijkstraNode;\r\n\tgrid: DijkstraNode[][];\r\n\tclosed: DijkstraNode[];\r\n\topen: DijkstraNode[];\r\n\tcurrent: DijkstraNode | undefined;\r\n\r\n\tconstructor(grid: GridObject, start: Position, goal: Position) {\r\n\t\tthis.grid = this.createGridMap(grid);\r\n\t\tthis.start = { ...this.grid[start.y][start.x], dist: 0 };\r\n\t\tthis.goal = { ...this.grid[goal.y][goal.x] };\r\n\t\tthis.closed = [];\r\n\t\tthis.open = [this.start];\r\n\t}\r\n\r\n\tcreateGridMap = (gr: GridObject): DijkstraNode[][] => {\r\n\t\tlet mp: DijkstraNode[][] = [];\r\n\t\tlet h = gr.length;\r\n\t\tlet w = gr[0].length;\r\n\t\tfor (let y = 0; y < h; y++) {\r\n\t\t\tlet rw: DijkstraNode[] = [];\r\n\t\t\tfor (let x = 0; x < w; x++) {\r\n\t\t\t\tlet n: DijkstraNode = { ...gr[y][x], dist: Infinity };\r\n\t\t\t\trw.push(n);\r\n\t\t\t}\r\n\t\t\tmp.push(rw);\r\n\t\t}\r\n\t\treturn mp;\r\n\t};\r\n\r\n\tadjSquares = (): DijkstraNode[] => {\r\n\t\tlet adjSq: DijkstraNode[] = [];\r\n\t\tlet gr = this.grid;\r\n\t\tlet sq = this.current;\r\n\t\tif (!sq) return adjSq;\r\n\t\tif (gr[sq.pos.y][sq.pos.x - 1]) adjSq.push(gr[sq.pos.y][sq.pos.x - 1]);\r\n\t\tif (gr[sq.pos.y][sq.pos.x + 1]) adjSq.push(gr[sq.pos.y][sq.pos.x + 1]);\r\n\t\tif (gr[sq.pos.y - 1]) adjSq.push(gr[sq.pos.y - 1][sq.pos.x]);\r\n\t\tif (gr[sq.pos.y + 1]) adjSq.push(gr[sq.pos.y + 1][sq.pos.x]);\r\n\t\treturn adjSq;\r\n\t};\r\n\r\n\tmakePath = (): DijkstraNode[] => {\r\n\t\tif (!this.current) return [];\r\n\t\tlet shortPath: DijkstraNode[] = [];\r\n\t\tlet prevSq: DijkstraNode = this.current;\r\n\t\twhile (prevSq.prev) {\r\n\t\t\tlet newSq = { ...this.grid[prevSq.prev.y][prevSq.prev.x] };\r\n\t\t\tnewSq.state = 'path';\r\n\t\t\tshortPath.unshift(newSq);\r\n\t\t\tprevSq = newSq;\r\n\t\t}\r\n\t\tprevSq.state = 'path';\r\n\t\tshortPath.unshift(prevSq);\r\n\t\treturn shortPath;\r\n\t};\r\n\r\n\tstep = () => {\r\n\t\tthis.open = this.open.sort((a, b) => {\r\n\t\t\treturn a.dist - b.dist;\r\n\t\t});\r\n\t\tlet localOpen: DijkstraNode[] = [];\r\n\r\n\t\tthis.current = this.open.shift();\r\n\t\tif (!this.current) {\r\n\t\t\treturn {\r\n\t\t\t\tmodified: this.closed,\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tthis.current.state = 'closed';\r\n\t\tthis.closed.push(this.current);\r\n\r\n\t\tif (this.current.type === 'goal') {\r\n\t\t\treturn {\r\n\t\t\t\tpath: this.makePath(),\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tlet adj = this.adjSquares();\r\n\t\tadj.forEach((sq) => {\r\n\t\t\tif (sq.type === 'start') return;\r\n\t\t\tif (sq.type === 'wall') return;\r\n\t\t\tif (!this.current) return;\r\n\t\t\tif (!this.closed.includes(sq) && !this.open.includes(sq)) {\r\n\t\t\t\tsq.dist = this.current.dist + 1;\r\n\t\t\t\tsq.prev = this.current.pos;\r\n\t\t\t\tsq.state = 'open';\r\n\t\t\t\tthis.open.push(sq);\r\n\t\t\t\tlocalOpen.push(sq);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn { modified: [this.current, ...localOpen] };\r\n\t};\r\n\r\n\tresult = () => {\r\n\t\twhile (this.open) {\r\n\t\t\tthis.open = this.open.sort((a, b) => {\r\n\t\t\t\treturn a.dist - b.dist;\r\n\t\t\t});\r\n\r\n\t\t\tthis.current = this.open.shift();\r\n\t\t\tif (!this.current) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tsquares: this.closed,\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tthis.current.state = 'closed';\r\n\t\t\tthis.closed.push(this.current);\r\n\r\n\t\t\tif (this.current.type === 'goal') {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tsquares: [...this.closed, ...this.open, ...this.makePath()],\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tlet adj = this.adjSquares();\r\n\t\t\tadj.forEach((sq) => {\r\n\t\t\t\tif (sq.type === 'start') return;\r\n\t\t\t\tif (sq.type === 'wall') return;\r\n\t\t\t\tif (!this.current) return;\r\n\t\t\t\tif (!this.closed.includes(sq) && !this.open.includes(sq)) {\r\n\t\t\t\t\tsq.dist = this.current.dist + 1;\r\n\t\t\t\t\tsq.prev = this.current.pos;\r\n\t\t\t\t\tsq.state = 'open';\r\n\t\t\t\t\tthis.open.push(sq);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tsquares: this.closed,\r\n\t\t};\r\n\t};\r\n}\r\n","//\r\nimport { GridNode, GridObject, Position } from '../model';\r\n\r\ninterface DfsNode extends GridNode {\r\n\tprev?: Position;\r\n}\r\n\r\nexport class DepthFS {\r\n\tgrid: DfsNode[][];\r\n\tstart: DfsNode;\r\n\tgoal: DfsNode;\r\n\tclosed: DfsNode[];\r\n\topen: DfsNode[];\r\n\tcurrent: DfsNode | undefined;\r\n\r\n\tconstructor(grid: GridObject, start: Position, goal: Position) {\r\n\t\tthis.grid = this.createGridMap(grid);\r\n\t\tthis.start = grid[start.y][start.x];\r\n\t\tthis.goal = grid[goal.y][goal.x];\r\n\t\tthis.closed = [];\r\n\t\tthis.open = [this.start];\r\n\t}\r\n\r\n\tstep = () => {\r\n\t\tthis.current = this.open.shift();\r\n\t\tif (!this.current) {\r\n\t\t\treturn {\r\n\t\t\t\tpath: [],\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tthis.current.state = 'closed';\r\n\t\tif (!this.closed.includes(this.current)) {\r\n\t\t\tthis.closed.push(this.current);\r\n\t\t}\r\n\r\n\t\tif (this.current.type === 'goal') {\r\n\t\t\treturn {\r\n\t\t\t\tpath: this.makePath(),\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tlet adj = this.adjSquares();\r\n\t\tlet l = adj.length;\r\n\t\tfor (let i = 0; i < l; i++) {\r\n\t\t\tconst sq = adj[i];\r\n\t\t\tif (sq.type === 'start') continue;\r\n\t\t\tif (sq.type === 'wall') continue;\r\n\t\t\tif (!this.current) continue;\r\n\t\t\tif (!this.closed.includes(sq) && !this.open.includes(sq)) {\r\n\t\t\t\tsq.prev = this.current.pos;\r\n\t\t\t\tsq.state = 'current';\r\n\t\t\t\tthis.open.push(sq);\r\n\t\t\t\treturn { modified: [this.current, ...this.open] };\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!this.current || !this.current.prev) {\r\n\t\t\treturn {\r\n\t\t\t\tmodified: this.closed,\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tlet prev = this.grid[this.current.prev.y][this.current.prev.x];\r\n\t\tprev.state = 'current';\r\n\t\tthis.open.push(prev);\r\n\t\tthis.current.state = 'closed';\r\n\r\n\t\treturn {\r\n\t\t\tmodified: [this.current, ...this.closed],\r\n\t\t};\r\n\t};\r\n\r\n\tresult = (): { squares: DfsNode[] } => {\r\n\t\twhile (this.closed) {\r\n\t\t\tlet shouldContinue = false;\r\n\t\t\tthis.current = this.open.shift();\r\n\t\t\tif (!this.current) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tsquares: [],\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tthis.current.state = 'closed';\r\n\t\t\tif (!this.closed.includes(this.current)) {\r\n\t\t\t\tthis.closed.push(this.current);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.current.type === 'goal') {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tsquares: [...this.closed, ...this.makePath()],\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tlet adj = this.adjSquares();\r\n\t\t\tadj.every((sq) => {\r\n\t\t\t\tif (sq.type === 'start') return true;\r\n\t\t\t\tif (sq.type === 'wall') return true;\r\n\t\t\t\tif (!this.current) return true;\r\n\t\t\t\tif (!this.closed.includes(sq) && !this.open.includes(sq)) {\r\n\t\t\t\t\tsq.prev = this.current.pos;\r\n\t\t\t\t\tsq.state = 'current';\r\n\t\t\t\t\tthis.open.push(sq);\r\n\t\t\t\t\tshouldContinue = true;\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t});\r\n\r\n\t\t\tif (shouldContinue) continue;\r\n\r\n\t\t\tif (!this.current || !this.current.prev) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tsquares: this.closed,\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tlet prev = this.grid[this.current.prev.y][this.current.prev.x];\r\n\t\t\tprev.state = 'current';\r\n\t\t\tthis.open.push(prev);\r\n\t\t\tthis.current.state = 'closed';\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tsquares: [...this.closed],\r\n\t\t};\r\n\t};\r\n\r\n\tnoRemainingSquares = () => {\r\n\t\treturn this.closed.filter((sq) => {\r\n\t\t\treturn sq.state !== 'closed' ? sq : undefined;\r\n\t\t});\r\n\t};\r\n\r\n\tadjSquares = (): DfsNode[] => {\r\n\t\tlet adjSq: DfsNode[] = [];\r\n\t\tlet gr = this.grid;\r\n\t\tlet sq = this.current;\r\n\t\tif (!sq) return adjSq;\r\n\t\tif (gr[sq.pos.y][sq.pos.x - 1]) adjSq.push(gr[sq.pos.y][sq.pos.x - 1]);\r\n\t\tif (gr[sq.pos.y + 1]) adjSq.push(gr[sq.pos.y + 1][sq.pos.x]);\r\n\t\tif (gr[sq.pos.y][sq.pos.x + 1]) adjSq.push(gr[sq.pos.y][sq.pos.x + 1]);\r\n\t\tif (gr[sq.pos.y - 1]) adjSq.push(gr[sq.pos.y - 1][sq.pos.x]);\r\n\r\n\t\treturn adjSq;\r\n\t};\r\n\r\n\tmakePath = (): DfsNode[] => {\r\n\t\tif (!this.current) return [];\r\n\t\tlet shortPath: DfsNode[] = [];\r\n\t\tlet prevSq: DfsNode = this.current;\r\n\t\twhile (prevSq.prev) {\r\n\t\t\tlet newSq = { ...this.grid[prevSq.prev.y][prevSq.prev.x] };\r\n\t\t\tnewSq.state = 'path';\r\n\t\t\tshortPath.unshift(newSq);\r\n\t\t\tprevSq = newSq;\r\n\t\t}\r\n\t\tprevSq.state = 'path';\r\n\t\tshortPath.unshift(prevSq);\r\n\t\treturn shortPath;\r\n\t};\r\n\r\n\tcreateGridMap = (gr: GridObject): DfsNode[][] => {\r\n\t\tlet mp: DfsNode[][] = [];\r\n\t\tlet h = gr.length;\r\n\t\tlet w = gr[0].length;\r\n\t\tfor (let y = 0; y < h; y++) {\r\n\t\t\tlet rw: DfsNode[] = [];\r\n\t\t\tfor (let x = 0; x < w; x++) {\r\n\t\t\t\tlet n: DfsNode = { ...gr[y][x], prev: undefined };\r\n\t\t\t\trw.push(n);\r\n\t\t\t}\r\n\t\t\tmp.push(rw);\r\n\t\t}\r\n\t\treturn mp;\r\n\t};\r\n}\r\n","//\r\nimport { GridObject } from '../model';\r\n\r\nexport class RecursiveDivision {\r\n\tgrid: GridObject;\r\n\tminY: number;\r\n\tminX: number;\r\n\tmaxY: number;\r\n\tmaxX: number;\r\n\r\n\tconstructor(grid: GridObject) {\r\n\t\tthis.grid = grid;\r\n\t\tthis.minY = 1;\r\n\t\tthis.minX = 1;\r\n\t\tthis.maxY = grid.length - 2;\r\n\t\tthis.maxX = grid[0].length - 2;\r\n\t}\r\n\r\n\tboundingWalls = (sqs: GridObject): GridObject => {\r\n\t\tlet h = sqs.length;\r\n\t\tlet w = sqs[0].length;\r\n\t\tfor (let y = 0; y < h; y++) {\r\n\t\t\tfor (let x = 0; x < w; x++) {\r\n\t\t\t\tif (sqs[y][x].type === 'start' || sqs[y][x].type === 'goal') continue;\r\n\t\t\t\tif (sqs[y][x].pos.y === 0) sqs[y][x].type = 'wall';\r\n\t\t\t\tif (sqs[y][x].pos.x === 0) sqs[y][x].type = 'wall';\r\n\t\t\t\tif (sqs[y][x].pos.y === h - 1) sqs[y][x].type = 'wall';\r\n\t\t\t\tif (sqs[y][x].pos.x === w - 1) sqs[y][x].type = 'wall';\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn sqs;\r\n\t};\r\n\r\n\taddInnerWalls = (\r\n\t\torientation: boolean,\r\n\t\tminX: number,\r\n\t\tmaxX: number,\r\n\t\tminY: number,\r\n\t\tmaxY: number\r\n\t) => {\r\n\t\tif (orientation) {\r\n\t\t\tif (maxX - minX < 2) return;\r\n\r\n\t\t\tlet y = Math.floor(this.randomNumber(minY, maxY) / 2) * 2;\r\n\t\t\tthis.addHorWall(minX, maxX, y);\r\n\r\n\t\t\tthis.addInnerWalls(!orientation, minX, maxX, minY, y - 1);\r\n\t\t\tthis.addInnerWalls(!orientation, minX, maxX, y + 1, maxY);\r\n\t\t} else {\r\n\t\t\tif (maxY - minY < 2) return;\r\n\r\n\t\t\tlet x = Math.floor(this.randomNumber(minX, maxX) / 2) * 2;\r\n\t\t\tthis.addVerWall(minY, maxY, x);\r\n\r\n\t\t\tthis.addInnerWalls(!orientation, minX, x - 1, minY, maxY);\r\n\t\t\tthis.addInnerWalls(!orientation, x + 1, maxX, minY, maxY);\r\n\t\t}\r\n\t};\r\n\r\n\taddHorWall = (minX: number, maxX: number, y: number) => {\r\n\t\tvar gate = Math.floor(this.randomNumber(minX, maxX) / 2) * 2 + 1;\r\n\r\n\t\tfor (let x = minX; x <= maxX; x++) {\r\n\t\t\tif (this.grid[y][x].type === 'start') continue;\r\n\t\t\tif (this.grid[y][x].type === 'goal') continue;\r\n\t\t\tif (x === gate) this.grid[y][x].type = 'empty';\r\n\t\t\telse this.grid[y][x].type = 'wall';\r\n\t\t}\r\n\t};\r\n\r\n\taddVerWall(minY: number, maxY: number, x: number) {\r\n\t\tvar gate = Math.floor(this.randomNumber(minY, maxY) / 2) * 2 + 1;\r\n\r\n\t\tfor (let y = minY; y <= maxY; y++) {\r\n\t\t\tif (this.grid[y][x].type === 'start') continue;\r\n\t\t\tif (this.grid[y][x].type === 'goal') continue;\r\n\t\t\tif (y === gate) this.grid[y][x].type = 'empty';\r\n\t\t\telse this.grid[y][x].type = 'wall';\r\n\t\t}\r\n\t}\r\n\r\n\trandomNumber = (min: number, max: number): number => {\r\n\t\treturn Math.floor(Math.random() * (max - min + 1) + min);\r\n\t};\r\n\r\n\tresult = () => {\r\n\t\tthis.addInnerWalls(true, this.minX, this.maxX, this.minY, this.maxY);\r\n\t\treturn this.boundingWalls(this.grid);\r\n\t};\r\n}\r\n","//\r\nimport { GridObject } from '../model';\r\n\r\nexport class RandomMaze {\r\n\tgrid: GridObject;\r\n\r\n\tconstructor(grid: GridObject) {\r\n\t\tthis.grid = grid;\r\n\t}\r\n\r\n\tresult = () => {\r\n\t\treturn this.grid.map((row) => {\r\n\t\t\treturn row.map((node) => {\r\n\t\t\t\tif (node.type === 'start' || node.type === 'goal') return node;\r\n\t\t\t\tif (Math.random() > 0.7) {\r\n\t\t\t\t\tnode.type = 'wall';\r\n\t\t\t\t\treturn node;\r\n\t\t\t\t}\r\n\t\t\t\treturn node;\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n}\r\n","//\r\nimport { Astar, DepthFS, Dijkstra } from '../algorithm';\r\nimport { AlgorithmId, AlgorithmObject, AppState } from '../model';\r\nimport { clearPath, mapNodesStateToGrid } from './GridUtility';\r\n\r\nexport const getAlgorithmObject = (\r\n\t{ grid, start, goal }: AppState,\r\n\t{ id }: AlgorithmId\r\n): AlgorithmObject => {\r\n\tswitch (id) {\r\n\t\tcase 'astar':\r\n\t\t\treturn {\r\n\t\t\t\tid: 'astar',\r\n\t\t\t\tname: 'A*',\r\n\t\t\t\tget: () => new Astar(grid, start, goal),\r\n\t\t\t};\r\n\t\tcase 'dijkstra':\r\n\t\t\treturn {\r\n\t\t\t\tid: 'dijkstra',\r\n\t\t\t\tname: 'Dijkstra',\r\n\t\t\t\tget: () => new Dijkstra(grid, start, goal),\r\n\t\t\t};\r\n\t\tcase 'depthfs':\r\n\t\t\treturn {\r\n\t\t\t\tid: 'depthfs',\r\n\t\t\t\tname: 'Depth First Search',\r\n\t\t\t\tget: () => new DepthFS(grid, start, goal),\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\tthrow new Error('Algorithm not found');\r\n\t}\r\n};\r\n\r\nexport const updateAlgorithm = (state: AppState): AppState => {\r\n\tlet algorithm,\r\n\t\tgrid = state.grid;\r\n\tif (state.algorithm) {\r\n\t\talgorithm = getAlgorithmObject(state, state.algorithm);\r\n\t\tif (state.wasSearch) {\r\n\t\t\tgrid = clearPath(grid);\r\n\t\t\tgrid = mapNodesStateToGrid(algorithm.get().result().squares, grid);\r\n\t\t}\r\n\t}\r\n\treturn { ...state, algorithm, grid };\r\n};\r\n","//\r\nimport { getNodeSize } from '../common';\r\nimport { GridNode, GridObject, NodeColour } from '../model';\r\nimport '../style/grid.css';\r\n\r\ninterface Props {\r\n\tgrid: GridObject;\r\n\tmouseDown: (node: GridNode) => void;\r\n\tmouseEnter: (node: GridNode) => void;\r\n}\r\n\r\nexport const Grid: React.FC<Props> = ({ grid, mouseDown, mouseEnter }) => {\r\n\tconst getNodeClass = (node: GridNode): NodeColour => {\r\n\t\tswitch (node.type) {\r\n\t\t\tcase 'wall':\r\n\t\t\t\treturn ' colour__wall';\r\n\t\t\tcase 'start':\r\n\t\t\t\treturn ' colour__start';\r\n\t\t\tcase 'goal':\r\n\t\t\t\treturn ' colour__goal';\r\n\t\t\tdefault:\r\n\t\t\t\tswitch (node.state) {\r\n\t\t\t\t\tcase 'closed':\r\n\t\t\t\t\t\treturn ' colour__closed';\r\n\t\t\t\t\tcase 'open':\r\n\t\t\t\t\t\treturn ' colour__open';\r\n\t\t\t\t\tcase 'path':\r\n\t\t\t\t\t\treturn ' colour__path';\r\n\t\t\t\t\tcase 'current':\r\n\t\t\t\t\t\treturn ' colour__current';\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\treturn '';\r\n\t\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst getStyles = () => {\r\n\t\tlet size = getNodeSize();\r\n\t\treturn {\r\n\t\t\twidth: size,\r\n\t\t\theight: size,\r\n\t\t};\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{grid.map((row, rowIdx) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className='grid__row' key={rowIdx}>\r\n\t\t\t\t\t\t{row.map((node, nodeIdx) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tclassName={'grid__node' + getNodeClass(node)}\r\n\t\t\t\t\t\t\t\t\tonMouseDown={() => mouseDown(node)}\r\n\t\t\t\t\t\t\t\t\tonMouseEnter={() => mouseEnter(node)}\r\n\t\t\t\t\t\t\t\t\tkey={nodeIdx}\r\n\t\t\t\t\t\t\t\t\tstyle={getStyles()}>\r\n\t\t\t\t\t\t\t\t\t{/* {node.type} */}\r\n\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t{/* {node.state} */}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n};\r\n","//\r\ninterface Props {\r\n\tsize: number;\r\n}\r\n\r\nexport const ListIcon: React.FC<Props> = ({ size }) => {\r\n\treturn (\r\n\t\t<svg\r\n\t\t\txmlns='http://www.w3.org/2000/svg'\r\n\t\t\twidth={size}\r\n\t\t\theight={size}\r\n\t\t\tfill='currentColor'\r\n\t\t\tclassName='bi bi-list'\r\n\t\t\tviewBox='0 0 16 16'>\r\n\t\t\t<path\r\n\t\t\t\tfill-rule='evenodd'\r\n\t\t\t\td='M2.5 12a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5z'\r\n\t\t\t/>\r\n\t\t</svg>\r\n\t);\r\n};\r\n","//\r\nimport { useState } from 'react';\r\nimport { ListIcon } from '../icon';\r\nimport '../style/dropdown.css';\r\n\r\ninterface Props {\r\n\ttitle: string;\r\n\tchildren?: JSX.Element | JSX.Element[];\r\n}\r\n\r\nexport const Dropdown: React.FC<Props> = ({ title, children }) => {\r\n\tconst [open, setOpen] = useState(false);\r\n\r\n\treturn (\r\n\t\t<div className='dropdown' onBlur={() => setOpen(false)} tabIndex={0}>\r\n\t\t\t<div\r\n\t\t\t\tclassName='title__container'\r\n\t\t\t\tonMouseDown={() => (open ? setOpen(false) : setOpen(true))}>\r\n\t\t\t\t<ListIcon size={24} />\r\n\t\t\t\t<span>{title}</span>\r\n\t\t\t</div>\r\n\t\t\t{open && <ul>{children}</ul>}\r\n\t\t</div>\r\n\t);\r\n};\r\n","//\r\ninterface Props {\r\n\ttext: string;\r\n\tonClick?: React.MouseEventHandler;\r\n\tactive?: boolean;\r\n}\r\n\r\nexport const Option: React.FC<Props> = ({ text, onClick, active }) => {\r\n\treturn (\r\n\t\t<li\r\n\t\t\tonClick={(e) => onClick && onClick(e)}\r\n\t\t\tclassName={active ? 'active' : ''}>\r\n\t\t\t{text}\r\n\t\t</li>\r\n\t);\r\n};\r\n","//\r\nimport '../style/button.css';\r\n\r\ninterface Props {\r\n\ttext: string;\r\n\tonClick: React.MouseEventHandler;\r\n}\r\n\r\nexport const Button: React.FC<Props> = ({ text, onClick }) => {\r\n\treturn (\r\n\t\t<div className='button' onClick={onClick}>\r\n\t\t\t{text}\r\n\t\t</div>\r\n\t);\r\n};\r\n","//\r\nimport '../style/list.css';\r\n\r\ninterface Props {\r\n\ttitle: string;\r\n\tchildren: JSX.Element | [JSX.Element, JSX.Element];\r\n}\r\n\r\nexport const List: React.FC<Props> = ({ title, children }) => {\r\n\treturn (\r\n\t\t<div className='list__container'>\r\n\t\t\t<div className='list__title'>{title}</div>\r\n\t\t\t<div className='list__row'>{children}</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n","//\r\ninterface Props {\r\n\tchildren: JSX.Element | JSX.Element[];\r\n}\r\n\r\nexport const Column: React.FC<Props> = ({ children }) => {\r\n\treturn <div className='list__col'>{children}</div>;\r\n};\r\n","//\r\nimport { NodeColour } from '../model';\r\n\r\ninterface Props {\r\n\ttext: string;\r\n\tkeyCol?: NodeColour;\r\n}\r\n\r\nexport const Item: React.FC<Props> = ({ text, keyCol }) => {\r\n\treturn (\r\n\t\t<div className='list__item'>\r\n\t\t\t{keyCol && <div className={'list__key ' + keyCol} />}\r\n\t\t\t{text}\r\n\t\t</div>\r\n\t);\r\n};\r\n","//\r\nimport '../style/radio.css';\r\n\r\ninterface Props {\r\n\tchildren: JSX.Element | JSX.Element[];\r\n}\r\n\r\nexport const Radio: React.FC<Props> = ({ children }) => {\r\n\treturn (\r\n\t\t<div className='radio__buttons'>\r\n\t\t\t<ul>{children}</ul>\r\n\t\t</div>\r\n\t);\r\n};\r\n","//\r\nimport '../style/bigbutton.css';\r\n\r\ninterface Props {\r\n\ttext: string;\r\n\tonClick: React.MouseEventHandler;\r\n}\r\n\r\nexport const BigButton: React.FC<Props> = ({ text, onClick }) => {\r\n\treturn (\r\n\t\t<div className='big__button' onClick={onClick}>\r\n\t\t\t{text}\r\n\t\t</div>\r\n\t);\r\n};\r\n","//\r\nimport { useReducer, useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { ModalState, ModalActions, ModalPage } from '../model/';\r\nimport '../style/modal.css';\r\n\r\nconst portal = document.getElementById('portal');\r\n\r\nconst ModalReducer = (state: ModalState, action: ModalActions) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'next-page':\r\n\t\t\treturn { current: state.current + 1 };\r\n\t\tcase 'previous-page':\r\n\t\t\treturn { current: state.current - 1 };\r\n\t\tdefault:\r\n\t\t\tthrow new Error();\r\n\t}\r\n};\r\n\r\ninterface Props {\r\n\tmodalPages: ModalPage[];\r\n}\r\n\r\nexport const Modal: React.FC<Props> = ({ modalPages }) => {\r\n\tconst [page, dispatch] = useReducer(ModalReducer, { current: 0 });\r\n\tconst [close, setClose] = useState(false);\r\n\r\n\treturn portal && !close\r\n\t\t? ReactDOM.createPortal(\r\n\t\t\t\t<div className='modal__background'>\r\n\t\t\t\t\t<div className='modal__container'>\r\n\t\t\t\t\t\t<div className='modal__title'>{modalPages[page.current].title}</div>\r\n\t\t\t\t\t\t<p>{modalPages[page.current].text}</p>\r\n\t\t\t\t\t\t<div className='modal__options'>\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\t\t'modal__button ' + (page.current - 1 > -1 ? '' : 'disabled')\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\tpage.current - 1 > -1\r\n\t\t\t\t\t\t\t\t\t\t? dispatch({ type: 'previous-page' })\r\n\t\t\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t\t\tPrevious\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\t\t'modal__button ' +\r\n\t\t\t\t\t\t\t\t\t(page.current + 1 < modalPages.length ? '' : 'disabled')\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\tpage.current + 1 < modalPages.length\r\n\t\t\t\t\t\t\t\t\t\t? dispatch({ type: 'next-page' })\r\n\t\t\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t\t\tNext\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='modal__button' onClick={() => setClose(true)}>\r\n\t\t\t\t\t\t\t\tClose\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>,\r\n\t\t\t\tportal\r\n\t\t  )\r\n\t\t: null;\r\n};\r\n","//\r\nimport { ModalPage } from '../model';\r\n\r\nexport const TutorialPages: ModalPage[] = [\r\n\t{\r\n\t\ttitle: 'Tutorial',\r\n\t\ttext: 'This is a breif explaination of how to use the application.',\r\n\t},\r\n\t{\r\n\t\ttitle: 'Selecting algorithms and mazes',\r\n\t\ttext: 'You can select an algorithm or maze to visualize from the drop down menus.',\r\n\t},\r\n\t{\r\n\t\ttitle: 'Moving flags',\r\n\t\ttext: 'Start square and goal square can be moved (Desktop users only) anywhere in the grid. If you have visualized a path begin moving the flags to see the updated path to that position.',\r\n\t},\r\n\t{\r\n\t\ttitle: 'Creating and removing walls',\r\n\t\ttext: 'Hold click on an empty square to begin placing walls. Hold click on a wall square to begin removing walls.',\r\n\t},\r\n\t{\r\n\t\ttitle: 'Automatic updating',\r\n\t\ttext: 'Placing and removing walls on a completed path will return the result for the new grid structure.',\r\n\t},\r\n\t{\r\n\t\ttitle: 'Made by Taylor North',\r\n\t\ttext: 'I made this application to improve my skills using React, at the same time demonstrating my ability to implement various popular algorithms.',\r\n\t},\r\n];\r\n","//\r\nimport { useEffect, useReducer, useRef } from 'react';\r\nimport './App.css';\r\nimport {\r\n\tcreateGrid,\r\n\tplaceFlag,\r\n\tminipulateNodes,\r\n\tgetAlgorithmObject,\r\n\tclearPath,\r\n\tgetSpeed,\r\n\tupdateAlgorithm,\r\n\tmapNodesStateToGrid,\r\n\tgetMazeObject,\r\n\tupdateMaze,\r\n\tclearWalls,\r\n\tgetAvaliableGridSpace,\r\n} from './common/';\r\nimport {\r\n\tGrid,\r\n\tDropdown,\r\n\tOption,\r\n\tButton,\r\n\tColumn,\r\n\tItem,\r\n\tList,\r\n\tRadio,\r\n\tBigButton,\r\n\tModal,\r\n} from './component/';\r\nimport { TutorialPages } from './modal-page';\r\nimport { GridNode, AppState, AppActions } from './model';\r\n\r\nvar _ = require('lodash');\r\n\r\nconst init = (initial: AppState) => {\r\n\tinitial.grid = placeFlag('start', initial.start, initial.grid);\r\n\tinitial.grid = placeFlag('goal', initial.goal, initial.grid);\r\n\treturn initial;\r\n};\r\n\r\nconst reducer = (state: AppState, action: AppActions) => {\r\n\tlet dState: AppState = _.cloneDeep(state);\r\n\r\n\tswitch (action.type) {\r\n\t\tcase 'toggle-dragging':\r\n\t\t\treturn {\r\n\t\t\t\t...dState,\r\n\t\t\t\tisDragging: !dState.isDragging,\r\n\t\t\t\tplaceType: action.payload,\r\n\t\t\t};\r\n\t\tcase 'modify-nodes':\r\n\t\t\tdState = minipulateNodes(dState, action.payload);\r\n\t\t\treturn updateAlgorithm(dState);\r\n\t\tcase 'change-algorithm':\r\n\t\t\treturn {\r\n\t\t\t\t...dState,\r\n\t\t\t\tgrid: clearPath(dState.grid),\r\n\t\t\t\talgorithm: getAlgorithmObject(dState, action.payload),\r\n\t\t\t\twasSearch: false,\r\n\t\t\t};\r\n\t\tcase 'update-grid':\r\n\t\t\treturn {\r\n\t\t\t\t...dState,\r\n\t\t\t\tgrid: mapNodesStateToGrid(action.payload, dState.grid),\r\n\t\t\t};\r\n\t\tcase 'draw-path':\r\n\t\t\tdState.grid[action.payload.pos.y][action.payload.pos.x].state =\r\n\t\t\t\taction.payload.state;\r\n\t\t\treturn { ...dState };\r\n\t\tcase 'toggle-searching':\r\n\t\t\treturn { ...dState, isSearching: !dState.isSearching };\r\n\t\tcase 'clear-path':\r\n\t\t\treturn { ...dState, grid: clearPath(dState.grid), wasSearch: false };\r\n\t\tcase 'change-speed':\r\n\t\t\treturn { ...dState, speed: getSpeed(action.payload) };\r\n\t\tcase 'set-was-search':\r\n\t\t\treturn { ...dState, wasSearch: action.payload };\r\n\t\tcase 'change-maze':\r\n\t\t\tdState.maze = getMazeObject(action.payload, dState.grid);\r\n\t\t\treturn { ...dState, ...updateMaze(dState) };\r\n\t\tcase 'clear-walls':\r\n\t\t\tdState = { ...dState, grid: clearWalls(dState.grid) };\r\n\t\t\treturn { ...dState, ...updateAlgorithm(dState) };\r\n\t\tcase 'create-grid':\r\n\t\t\tlet { h, w } = action.payload;\r\n\t\t\tlet grid = createGrid(h, w);\r\n\t\t\tdState.start = { x: 1, y: 1 };\r\n\t\t\tdState.goal = { x: w - 2, y: h - 2 };\r\n\t\t\tgrid = placeFlag('start', dState.start, grid);\r\n\t\t\tgrid = placeFlag('goal', dState.goal, grid);\r\n\t\t\treturn { ...dState, grid };\r\n\t\tdefault:\r\n\t\t\tthrow new Error('Reducer action not found');\r\n\t}\r\n};\r\n\r\nconst App: React.FC = () => {\r\n\tconst [state, dispatch] = useReducer(\r\n\t\treducer,\r\n\t\t{\r\n\t\t\tgrid: createGrid(5, 5),\r\n\t\t\tstart: { x: 1, y: 1 },\r\n\t\t\tgoal: { x: 3, y: 3 },\r\n\t\t\tisDragging: false,\r\n\t\t\tisSearching: false,\r\n\t\t\twasSearch: false,\r\n\t\t\tspeed: getSpeed({ id: 'fast' }),\r\n\t\t},\r\n\t\tinit\r\n\t);\r\n\tconst gridRef = useRef<HTMLDivElement | null>(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tlet [w, h] = getAvaliableGridSpace(gridRef.current);\r\n\t\tdispatch({ type: 'create-grid', payload: { w, h } });\r\n\t}, []);\r\n\r\n\tconst startAlgorithm = async () => {\r\n\t\tif (!state.algorithm) return;\r\n\t\tdispatch({ type: 'toggle-searching' });\r\n\t\tdispatch({ type: 'clear-path' });\r\n\t\tlet algorithm = state.algorithm.get();\r\n\t\tlet path: GridNode[] = [];\r\n\t\twhile (true) {\r\n\t\t\tlet step: any = await new Promise((res) => {\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tres(algorithm?.step());\r\n\t\t\t\t}, state.speed.rate);\r\n\t\t\t});\r\n\t\t\tif (step.modified) {\r\n\t\t\t\tdispatch({ type: 'update-grid', payload: step.modified });\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tpath = step.path;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\twhile (true) {\r\n\t\t\tlet step: any = await new Promise((res) => {\r\n\t\t\t\tsetTimeout(\r\n\t\t\t\t\t() => {\r\n\t\t\t\t\t\tres(path.shift());\r\n\t\t\t\t\t},\r\n\t\t\t\t\tstate.speed.rate < 10 ? 10 : state.speed.rate * 0.5\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t\tif (step) {\r\n\t\t\t\tdispatch({ type: 'draw-path', payload: step });\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tdispatch({ type: 'toggle-searching' });\r\n\t\tdispatch({ type: 'set-was-search', payload: true });\r\n\t};\r\n\r\n\tconst mouseDown = (node: GridNode) => {\r\n\t\twindow.addEventListener('mouseup', mouseUp);\r\n\t\tdispatch({ type: 'toggle-dragging', payload: node.type });\r\n\t\tdispatch({ type: 'modify-nodes', payload: node });\r\n\t};\r\n\r\n\tconst mouseEnter = (node: GridNode) => {\r\n\t\tdispatch({ type: 'modify-nodes', payload: node });\r\n\t};\r\n\r\n\tconst mouseUp = () => {\r\n\t\twindow.removeEventListener('mouseup', mouseUp);\r\n\t\tdispatch({ type: 'toggle-dragging' });\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='app'>\r\n\t\t\t<div className='app__layout'>\r\n\t\t\t\t<div className='column__1'>\r\n\t\t\t\t\t<div className='main__controls'>\r\n\t\t\t\t\t\t<div className='main__title'>Pathfinding Visualizer</div>\r\n\t\t\t\t\t\t<div className='big__screen'>\r\n\t\t\t\t\t\t\t<BigButton\r\n\t\t\t\t\t\t\t\ttext='Visualize'\r\n\t\t\t\t\t\t\t\tonClick={() => !state.isSearching && startAlgorithm()}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<Dropdown title={'Search Algorithms'}>\r\n\t\t\t\t\t\t\t<Option\r\n\t\t\t\t\t\t\t\ttext={'A* Search'}\r\n\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t!state.isSearching &&\r\n\t\t\t\t\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\t\t\t\t\ttype: 'change-algorithm',\r\n\t\t\t\t\t\t\t\t\t\tpayload: { id: 'astar' },\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Option\r\n\t\t\t\t\t\t\t\ttext={'Dijkstra'}\r\n\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t!state.isSearching &&\r\n\t\t\t\t\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\t\t\t\t\ttype: 'change-algorithm',\r\n\t\t\t\t\t\t\t\t\t\tpayload: { id: 'dijkstra' },\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Option\r\n\t\t\t\t\t\t\t\ttext={'Depth First Search'}\r\n\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t!state.isSearching &&\r\n\t\t\t\t\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\t\t\t\t\ttype: 'change-algorithm',\r\n\t\t\t\t\t\t\t\t\t\tpayload: { id: 'depthfs' },\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Dropdown>\r\n\t\t\t\t\t\t<Dropdown title={'Maze Algorithms'}>\r\n\t\t\t\t\t\t\t<Option\r\n\t\t\t\t\t\t\t\ttext={'Recursive Division'}\r\n\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t!state.isSearching &&\r\n\t\t\t\t\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\t\t\t\t\ttype: 'change-maze',\r\n\t\t\t\t\t\t\t\t\t\tpayload: { id: 'recursive' },\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Option\r\n\t\t\t\t\t\t\t\ttext={'Random Maze'}\r\n\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t!state.isSearching &&\r\n\t\t\t\t\t\t\t\t\tdispatch({ type: 'change-maze', payload: { id: 'random' } })\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Dropdown>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttext='Clear path'\r\n\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t!state.isSearching && dispatch({ type: 'clear-path' })\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttext='Remove walls'\r\n\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t!state.isSearching && dispatch({ type: 'clear-walls' })\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Radio>\r\n\t\t\t\t\t\t\t<Option\r\n\t\t\t\t\t\t\t\ttext='Slow'\r\n\t\t\t\t\t\t\t\tactive={state.speed.id === 'slow'}\r\n\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t!state.isSearching &&\r\n\t\t\t\t\t\t\t\t\tdispatch({ type: 'change-speed', payload: { id: 'slow' } })\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Option\r\n\t\t\t\t\t\t\t\ttext='Medium'\r\n\t\t\t\t\t\t\t\tactive={state.speed.id === 'medium'}\r\n\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t!state.isSearching &&\r\n\t\t\t\t\t\t\t\t\tdispatch({ type: 'change-speed', payload: { id: 'medium' } })\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Option\r\n\t\t\t\t\t\t\t\ttext='Fast'\r\n\t\t\t\t\t\t\t\tactive={state.speed.id === 'fast'}\r\n\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t!state.isSearching &&\r\n\t\t\t\t\t\t\t\t\tdispatch({ type: 'change-speed', payload: { id: 'fast' } })\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Radio>\r\n\t\t\t\t\t\t<List title='Legend'>\r\n\t\t\t\t\t\t\t<Column>\r\n\t\t\t\t\t\t\t\t<Item text='Start' keyCol=' colour__start' />\r\n\t\t\t\t\t\t\t\t<Item text='Goal' keyCol=' colour__goal' />\r\n\t\t\t\t\t\t\t\t<Item text='Wall' keyCol=' colour__wall' />\r\n\t\t\t\t\t\t\t</Column>\r\n\t\t\t\t\t\t\t<Column>\r\n\t\t\t\t\t\t\t\t<Item text='Path' keyCol=' colour__path' />\r\n\t\t\t\t\t\t\t\t<Item text='Open set' keyCol=' colour__open' />\r\n\t\t\t\t\t\t\t\t<Item text='Closed set' keyCol=' colour__closed' />\r\n\t\t\t\t\t\t\t</Column>\r\n\t\t\t\t\t\t</List>\r\n\t\t\t\t\t\t<List title='Settings'>\r\n\t\t\t\t\t\t\t<Column>\r\n\t\t\t\t\t\t\t\t<Item\r\n\t\t\t\t\t\t\t\t\ttext={\r\n\t\t\t\t\t\t\t\t\t\t'Search: ' +\r\n\t\t\t\t\t\t\t\t\t\t(state.algorithm ? state.algorithm?.name : 'Not selected')\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Item\r\n\t\t\t\t\t\t\t\t\ttext={\r\n\t\t\t\t\t\t\t\t\t\t'Maze: ' + (state.maze ? state.maze?.name : 'Not selected')\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Column>\r\n\t\t\t\t\t\t</List>\r\n\t\t\t\t\t\t<div className='small__screen'>\r\n\t\t\t\t\t\t\t<BigButton\r\n\t\t\t\t\t\t\t\ttext='Visualize'\r\n\t\t\t\t\t\t\t\tonClick={() => !state.isSearching && startAlgorithm()}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='column__2' ref={gridRef}>\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\tgrid={state.grid}\r\n\t\t\t\t\t\tmouseDown={(n) => !state.isSearching && mouseDown(n)}\r\n\t\t\t\t\t\tmouseEnter={(n) =>\r\n\t\t\t\t\t\t\t!state.isSearching && state.isDragging && mouseEnter(n)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<Modal modalPages={TutorialPages} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","//\r\nimport { RandomMaze, RecursiveDivision } from '../algorithm';\r\nimport { GridObject, MazeId, MazeObject, AppState } from '../model';\r\nimport { updateAlgorithm } from './AlgorithmUtility';\r\nimport { clearWalls } from './GridUtility';\r\n\r\nexport const getMazeObject = ({ id }: MazeId, grid: GridObject): MazeObject => {\r\n\tswitch (id) {\r\n\t\tcase 'recursive':\r\n\t\t\treturn {\r\n\t\t\t\tid: 'recursive',\r\n\t\t\t\tname: 'Recrusive Division',\r\n\t\t\t\tget: () => new RecursiveDivision(grid),\r\n\t\t\t};\r\n\t\tcase 'random':\r\n\t\t\treturn {\r\n\t\t\t\tid: 'random',\r\n\t\t\t\tname: 'Random',\r\n\t\t\t\tget: () => new RandomMaze(grid),\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\tthrow new Error('Maze not found');\r\n\t}\r\n};\r\n\r\nexport const updateMaze = (state: AppState): AppState | undefined => {\r\n\tif (!state.maze) return;\r\n\tlet { grid, maze } = state;\r\n\tgrid = clearWalls(grid);\r\n\tgrid = maze.get().result();\r\n\tstate = { ...state, maze, grid };\r\n\treturn { ...state, ...updateAlgorithm(state) };\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}